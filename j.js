let player, overlay, initialBg, bgEl; const rapImages = ["1.png", "2.png", "3.png", "4.png", "5.png", "6.png", "7.png", "8.png"], cImages = ["initial.png"], rImages = ["r.png"], urls = ["https://shorturl.at/xB6zj", "https://shorturl.at/E5wJO", "https://shorturl.at/iuaz4", "https://shorturl.at/X8HV"]; rapImages.forEach(e => new Image().src = e), cImages.forEach(e => new Image().src = e), rImages.forEach(e => new Image().src = e); function sF(e, t, n, a = rapImages) { const l = bgEl.src; let i; setTimeout(() => { let o = 0; bgEl.style.opacity = .03, bgEl.src = a[o], i = setInterval(() => { o = (o + 1) % a.length, bgEl.src = a[o] }, n), setTimeout(() => { clearInterval(i), bgEl.src = l, bgEl.style.opacity = .01 }, t) }, e) } document.addEventListener("DOMContentLoaded", () => { ov = document.getElementById("playOverlay"), iBg = document.getElementById("initialBg"), bgEl = document.getElementById("bgImage"), bgEl.classList.add("pulse") }); function onYouTubeIframeAPIReady() { pl = new YT.Player("ytPlayer", { videoId: "e0L5U-BWof0", playerVars: { autoplay: 0, controls: 0, rel: 0, modestbranding: 1, iv_load_policy: 3, disablekb: 1, playsinline: 1 }, events: { onReady: oPr, onStateChange: oPSC } }) } function sA(e) { for (let t = e.length - 1; t > 0; t--) { const n = Math.floor(Math.random() * (t + 1));[e[t], e[n]] = [e[n], e[t]] } return e } async function oPr() { iBg.style.display = "block", ov.style.display = "flex", ov.addEventListener("click", async () => { document.documentElement.requestFullscreen && await document.documentElement.requestFullscreen(), ov.style.display = "none"; const e = 1500, t = 5800 + e; setTimeout(() => { pl.setVolume(100), pl.playVideo() }, e), setTimeout(() => { bgEl.style.display = "block", bgEl.classList.add("pulse"), iBg.style.display = "none", sAmb(16.25); const n = ["image.png"].concat(rImages).concat(cImages); sF(14700, 8800, 1848, sA(rapImages)), sF(3e4, 924, 924, cImages), sF(4e4, 1848, 1848, cImages), sF(47500, 29e3, 1848, sA(rapImages)), sF(8e4, 924, 924, cImages), sF(88500, 924, 924, cImages), sF(91500, 1848, 1848, cImages), sF(94500, 11088, 924, sA(rapImages)), sF(12e4, 1848, 1848, cImages), sF(13e4, 924, 924, cImages), sF(14e4, 1848, 1848, cImages), sF(156900, 21252, 924, sA(rapImages)), sF(19e4, 1848, 1848, cImages), sF(2e5, 17556, 924, n), sF(218800, 12012, 924, sA(rapImages)), sF(232e3, 33e3, 924, n), sF(265600, 4620, 4620, rImages), sF(28e4, 924, 924, cImages), sF(283e3, 924, 924, cImages), sF(286e3, 924, 924, cImages), sF(289e3, 924, 924, cImages), sF(292e3, 4620, 4620, cImages), sF(3e5, 20100, 924) }, t) }, { once: !0 }) } function oPSC(e) { e.data === YT.PlayerState.ENDED && (bgEl.style.display = "none", iBg.style.display = "block", setTimeout(() => { iBg.style.brightness = "0.06", iBg.src = "r.png" }, 6200), setTimeout(() => { window.location.href = sA(us)[0] }, 8200)) } function sAmb(e) { const t = document.createElement("canvas"); t.id = "ambientCanvas", document.body.appendChild(t); const n = t.getContext("2d"); let a, l; function i() { a = t.width = window.innerWidth, l = t.height = window.innerHeight } window.addEventListener("resize", i), i(); const o = e / 60, p = 60, r = 10, d = .2, y = 4, g = performance.now(); (function h() { const f = (performance.now() - g) / 1e3, w = (Math.sin(2 * Math.PI * o * f) + 1) / 2, u = d + w * (1 - d); t.style.filter = `blur(${u * y}px)`; const m = n.createImageData(a, l), c = m.data, I = (p - r) * u; for (let s = 0, E = a * l; s < E; s++) { const b = r + Math.random() * I; c[4 * s] = c[4 * s + 1] = c[4 * s + 2] = 150, c[4 * s + 3] = b } n.putImageData(m, 0, 0), requestAnimationFrame(h) })() }
